// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// gaussian
double gaussian(double mean, double stdev, double x);
RcppExport SEXP _RNAmrf_gaussian(SEXP meanSEXP, SEXP stdevSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< double >::type stdev(stdevSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(gaussian(mean, stdev, x));
    return rcpp_result_gen;
END_RCPP
}
// test
NumericVector test(NumericVector x);
RcppExport SEXP _RNAmrf_test(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(test(x));
    return rcpp_result_gen;
END_RCPP
}
// Falign
double Falign(NumericMatrix sco_mtx);
RcppExport SEXP _RNAmrf_Falign(SEXP sco_mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type sco_mtx(sco_mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(Falign(sco_mtx));
    return rcpp_result_gen;
END_RCPP
}
// retrieve_matj
double retrieve_matj(int i, int a, int j, int b, NumericMatrix mat_j, int len_a);
RcppExport SEXP _RNAmrf_retrieve_matj(SEXP iSEXP, SEXP aSEXP, SEXP jSEXP, SEXP bSEXP, SEXP mat_jSEXP, SEXP len_aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< int >::type b(bSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat_j(mat_jSEXP);
    Rcpp::traits::input_parameter< int >::type len_a(len_aSEXP);
    rcpp_result_gen = Rcpp::wrap(retrieve_matj(i, a, j, b, mat_j, len_a));
    return rcpp_result_gen;
END_RCPP
}
// ini_SCO
NumericMatrix ini_SCO(IntegerVector seq, NumericMatrix mrf_mat, NumericMatrix mrf_h, bool DEBUG);
RcppExport SEXP _RNAmrf_ini_SCO(SEXP seqSEXP, SEXP mrf_matSEXP, SEXP mrf_hSEXP, SEXP DEBUGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mrf_mat(mrf_matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mrf_h(mrf_hSEXP);
    Rcpp::traits::input_parameter< bool >::type DEBUG(DEBUGSEXP);
    rcpp_result_gen = Rcpp::wrap(ini_SCO(seq, mrf_mat, mrf_h, DEBUG));
    return rcpp_result_gen;
END_RCPP
}
// ini_SCO_simple
NumericMatrix ini_SCO_simple(IntegerVector seq, NumericMatrix mrf_h);
RcppExport SEXP _RNAmrf_ini_SCO_simple(SEXP seqSEXP, SEXP mrf_hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mrf_h(mrf_hSEXP);
    rcpp_result_gen = Rcpp::wrap(ini_SCO_simple(seq, mrf_h));
    return rcpp_result_gen;
END_RCPP
}
// align
IntegerVector align(NumericMatrix sco_mtx, double gap_ext, double gap_open);
RcppExport SEXP _RNAmrf_align(SEXP sco_mtxSEXP, SEXP gap_extSEXP, SEXP gap_openSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type sco_mtx(sco_mtxSEXP);
    Rcpp::traits::input_parameter< double >::type gap_ext(gap_extSEXP);
    Rcpp::traits::input_parameter< double >::type gap_open(gap_openSEXP);
    rcpp_result_gen = Rcpp::wrap(align(sco_mtx, gap_ext, gap_open));
    return rcpp_result_gen;
END_RCPP
}
// align_b2a
IntegerVector align_b2a(NumericMatrix sco_mtx, double gap_ext, double gap_open);
RcppExport SEXP _RNAmrf_align_b2a(SEXP sco_mtxSEXP, SEXP gap_extSEXP, SEXP gap_openSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type sco_mtx(sco_mtxSEXP);
    Rcpp::traits::input_parameter< double >::type gap_ext(gap_extSEXP);
    Rcpp::traits::input_parameter< double >::type gap_open(gap_openSEXP);
    rcpp_result_gen = Rcpp::wrap(align_b2a(sco_mtx, gap_ext, gap_open));
    return rcpp_result_gen;
END_RCPP
}
// align_C_mat
NumericMatrix align_C_mat(NumericMatrix sco_mtx, double gap_ext, double gap_open);
RcppExport SEXP _RNAmrf_align_C_mat(SEXP sco_mtxSEXP, SEXP gap_extSEXP, SEXP gap_openSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type sco_mtx(sco_mtxSEXP);
    Rcpp::traits::input_parameter< double >::type gap_ext(gap_extSEXP);
    Rcpp::traits::input_parameter< double >::type gap_open(gap_openSEXP);
    rcpp_result_gen = Rcpp::wrap(align_C_mat(sco_mtx, gap_ext, gap_open));
    return rcpp_result_gen;
END_RCPP
}
// align_C_lab
IntegerMatrix align_C_lab(NumericMatrix sco_mtx, double gap_ext, double gap_open);
RcppExport SEXP _RNAmrf_align_C_lab(SEXP sco_mtxSEXP, SEXP gap_extSEXP, SEXP gap_openSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type sco_mtx(sco_mtxSEXP);
    Rcpp::traits::input_parameter< double >::type gap_ext(gap_extSEXP);
    Rcpp::traits::input_parameter< double >::type gap_open(gap_openSEXP);
    rcpp_result_gen = Rcpp::wrap(align_C_lab(sco_mtx, gap_ext, gap_open));
    return rcpp_result_gen;
END_RCPP
}
// align_PSgap
IntegerVector align_PSgap(NumericMatrix sco_mtx, double gap_ext, NumericVector gap_open);
RcppExport SEXP _RNAmrf_align_PSgap(SEXP sco_mtxSEXP, SEXP gap_extSEXP, SEXP gap_openSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type sco_mtx(sco_mtxSEXP);
    Rcpp::traits::input_parameter< double >::type gap_ext(gap_extSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gap_open(gap_openSEXP);
    rcpp_result_gen = Rcpp::wrap(align_PSgap(sco_mtx, gap_ext, gap_open));
    return rcpp_result_gen;
END_RCPP
}
// align_PSgap2
IntegerVector align_PSgap2(NumericMatrix sco_mtx, double gap_ext, NumericVector gap_ins, NumericVector gap_del);
RcppExport SEXP _RNAmrf_align_PSgap2(SEXP sco_mtxSEXP, SEXP gap_extSEXP, SEXP gap_insSEXP, SEXP gap_delSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type sco_mtx(sco_mtxSEXP);
    Rcpp::traits::input_parameter< double >::type gap_ext(gap_extSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gap_ins(gap_insSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gap_del(gap_delSEXP);
    rcpp_result_gen = Rcpp::wrap(align_PSgap2(sco_mtx, gap_ext, gap_ins, gap_del));
    return rcpp_result_gen;
END_RCPP
}
// score_aln
DoubleVector score_aln(IntegerVector a2b, IntegerVector seq, NumericMatrix mrf_mat, NumericMatrix mrf_h, bool DEBUG);
RcppExport SEXP _RNAmrf_score_aln(SEXP a2bSEXP, SEXP seqSEXP, SEXP mrf_matSEXP, SEXP mrf_hSEXP, SEXP DEBUGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type a2b(a2bSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mrf_mat(mrf_matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mrf_h(mrf_hSEXP);
    Rcpp::traits::input_parameter< bool >::type DEBUG(DEBUGSEXP);
    rcpp_result_gen = Rcpp::wrap(score_aln(a2b, seq, mrf_mat, mrf_h, DEBUG));
    return rcpp_result_gen;
END_RCPP
}
// mod_SCO_sparse
NumericMatrix mod_SCO_sparse(NumericMatrix SCO, int iteration, IntegerVector seq, NumericMatrix pair_mat, NumericMatrix mrf_mat, NumericMatrix mrf_h, double wt_h, double wt_j, double gap_o, double gap_e, bool DEBUG);
RcppExport SEXP _RNAmrf_mod_SCO_sparse(SEXP SCOSEXP, SEXP iterationSEXP, SEXP seqSEXP, SEXP pair_matSEXP, SEXP mrf_matSEXP, SEXP mrf_hSEXP, SEXP wt_hSEXP, SEXP wt_jSEXP, SEXP gap_oSEXP, SEXP gap_eSEXP, SEXP DEBUGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type SCO(SCOSEXP);
    Rcpp::traits::input_parameter< int >::type iteration(iterationSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pair_mat(pair_matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mrf_mat(mrf_matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mrf_h(mrf_hSEXP);
    Rcpp::traits::input_parameter< double >::type wt_h(wt_hSEXP);
    Rcpp::traits::input_parameter< double >::type wt_j(wt_jSEXP);
    Rcpp::traits::input_parameter< double >::type gap_o(gap_oSEXP);
    Rcpp::traits::input_parameter< double >::type gap_e(gap_eSEXP);
    Rcpp::traits::input_parameter< bool >::type DEBUG(DEBUGSEXP);
    rcpp_result_gen = Rcpp::wrap(mod_SCO_sparse(SCO, iteration, seq, pair_mat, mrf_mat, mrf_h, wt_h, wt_j, gap_o, gap_e, DEBUG));
    return rcpp_result_gen;
END_RCPP
}
// mod_SCO
NumericMatrix mod_SCO(NumericMatrix SCO, int iteration, IntegerVector seq, NumericMatrix mrf_mat, NumericMatrix mrf_h, double wt_h, double wt_j, double gap_o, double gap_e, bool DEBUG);
RcppExport SEXP _RNAmrf_mod_SCO(SEXP SCOSEXP, SEXP iterationSEXP, SEXP seqSEXP, SEXP mrf_matSEXP, SEXP mrf_hSEXP, SEXP wt_hSEXP, SEXP wt_jSEXP, SEXP gap_oSEXP, SEXP gap_eSEXP, SEXP DEBUGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type SCO(SCOSEXP);
    Rcpp::traits::input_parameter< int >::type iteration(iterationSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mrf_mat(mrf_matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mrf_h(mrf_hSEXP);
    Rcpp::traits::input_parameter< double >::type wt_h(wt_hSEXP);
    Rcpp::traits::input_parameter< double >::type wt_j(wt_jSEXP);
    Rcpp::traits::input_parameter< double >::type gap_o(gap_oSEXP);
    Rcpp::traits::input_parameter< double >::type gap_e(gap_eSEXP);
    Rcpp::traits::input_parameter< bool >::type DEBUG(DEBUGSEXP);
    rcpp_result_gen = Rcpp::wrap(mod_SCO(SCO, iteration, seq, mrf_mat, mrf_h, wt_h, wt_j, gap_o, gap_e, DEBUG));
    return rcpp_result_gen;
END_RCPP
}
// mod_SCO_PSgap
NumericMatrix mod_SCO_PSgap(NumericMatrix SCO, int iteration, IntegerVector seq, NumericMatrix mrf_mat, NumericMatrix mrf_h, double wt_h, double wt_j, NumericVector gap_o, double gap_e, bool DEBUG);
RcppExport SEXP _RNAmrf_mod_SCO_PSgap(SEXP SCOSEXP, SEXP iterationSEXP, SEXP seqSEXP, SEXP mrf_matSEXP, SEXP mrf_hSEXP, SEXP wt_hSEXP, SEXP wt_jSEXP, SEXP gap_oSEXP, SEXP gap_eSEXP, SEXP DEBUGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type SCO(SCOSEXP);
    Rcpp::traits::input_parameter< int >::type iteration(iterationSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mrf_mat(mrf_matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mrf_h(mrf_hSEXP);
    Rcpp::traits::input_parameter< double >::type wt_h(wt_hSEXP);
    Rcpp::traits::input_parameter< double >::type wt_j(wt_jSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gap_o(gap_oSEXP);
    Rcpp::traits::input_parameter< double >::type gap_e(gap_eSEXP);
    Rcpp::traits::input_parameter< bool >::type DEBUG(DEBUGSEXP);
    rcpp_result_gen = Rcpp::wrap(mod_SCO_PSgap(SCO, iteration, seq, mrf_mat, mrf_h, wt_h, wt_j, gap_o, gap_e, DEBUG));
    return rcpp_result_gen;
END_RCPP
}
// mod_SCO_PSgap2
NumericMatrix mod_SCO_PSgap2(NumericMatrix SCO, int iteration, IntegerVector seq, NumericMatrix mrf_mat, NumericMatrix mrf_h, double wt_h, double wt_j, NumericVector gap_ins, NumericVector gap_del, double gap_e, bool DEBUG);
RcppExport SEXP _RNAmrf_mod_SCO_PSgap2(SEXP SCOSEXP, SEXP iterationSEXP, SEXP seqSEXP, SEXP mrf_matSEXP, SEXP mrf_hSEXP, SEXP wt_hSEXP, SEXP wt_jSEXP, SEXP gap_insSEXP, SEXP gap_delSEXP, SEXP gap_eSEXP, SEXP DEBUGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type SCO(SCOSEXP);
    Rcpp::traits::input_parameter< int >::type iteration(iterationSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mrf_mat(mrf_matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mrf_h(mrf_hSEXP);
    Rcpp::traits::input_parameter< double >::type wt_h(wt_hSEXP);
    Rcpp::traits::input_parameter< double >::type wt_j(wt_jSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gap_ins(gap_insSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gap_del(gap_delSEXP);
    Rcpp::traits::input_parameter< double >::type gap_e(gap_eSEXP);
    Rcpp::traits::input_parameter< bool >::type DEBUG(DEBUGSEXP);
    rcpp_result_gen = Rcpp::wrap(mod_SCO_PSgap2(SCO, iteration, seq, mrf_mat, mrf_h, wt_h, wt_j, gap_ins, gap_del, gap_e, DEBUG));
    return rcpp_result_gen;
END_RCPP
}
// a2b2a2m
CharacterVector a2b2a2m(IntegerVector a2b, IntegerVector seq, int mrflen);
RcppExport SEXP _RNAmrf_a2b2a2m(SEXP a2bSEXP, SEXP seqSEXP, SEXP mrflenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type a2b(a2bSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< int >::type mrflen(mrflenSEXP);
    rcpp_result_gen = Rcpp::wrap(a2b2a2m(a2b, seq, mrflen));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RNAmrf_gaussian", (DL_FUNC) &_RNAmrf_gaussian, 3},
    {"_RNAmrf_test", (DL_FUNC) &_RNAmrf_test, 1},
    {"_RNAmrf_Falign", (DL_FUNC) &_RNAmrf_Falign, 1},
    {"_RNAmrf_retrieve_matj", (DL_FUNC) &_RNAmrf_retrieve_matj, 6},
    {"_RNAmrf_ini_SCO", (DL_FUNC) &_RNAmrf_ini_SCO, 4},
    {"_RNAmrf_ini_SCO_simple", (DL_FUNC) &_RNAmrf_ini_SCO_simple, 2},
    {"_RNAmrf_align", (DL_FUNC) &_RNAmrf_align, 3},
    {"_RNAmrf_align_b2a", (DL_FUNC) &_RNAmrf_align_b2a, 3},
    {"_RNAmrf_align_C_mat", (DL_FUNC) &_RNAmrf_align_C_mat, 3},
    {"_RNAmrf_align_C_lab", (DL_FUNC) &_RNAmrf_align_C_lab, 3},
    {"_RNAmrf_align_PSgap", (DL_FUNC) &_RNAmrf_align_PSgap, 3},
    {"_RNAmrf_align_PSgap2", (DL_FUNC) &_RNAmrf_align_PSgap2, 4},
    {"_RNAmrf_score_aln", (DL_FUNC) &_RNAmrf_score_aln, 5},
    {"_RNAmrf_mod_SCO_sparse", (DL_FUNC) &_RNAmrf_mod_SCO_sparse, 11},
    {"_RNAmrf_mod_SCO", (DL_FUNC) &_RNAmrf_mod_SCO, 10},
    {"_RNAmrf_mod_SCO_PSgap", (DL_FUNC) &_RNAmrf_mod_SCO_PSgap, 10},
    {"_RNAmrf_mod_SCO_PSgap2", (DL_FUNC) &_RNAmrf_mod_SCO_PSgap2, 11},
    {"_RNAmrf_a2b2a2m", (DL_FUNC) &_RNAmrf_a2b2a2m, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_RNAmrf(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
